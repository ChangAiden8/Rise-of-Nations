# These are the 12 ideologies we are working with:
#- Communism
#- Democratic Socialism
#- Progressive
#- Social Democrat
#- Social Liberal
#- Market Liberal
#- Conservative
#- Reactionary
#- Monarchist
#- Nationalist
#- Fascist
#- Islamist

break_coalition = {
	clr_country_flag = has_coalition
	clr_country_flag = coalition_islamist
	clr_country_flag = coalition_fascist
	clr_country_flag = coalition_nationalist
	clr_country_flag = coalition_monarchist
	clr_country_flag = coalition_reactionary
	clr_country_flag = coalition_conservative
	clr_country_flag = coalition_market_liberal
	clr_country_flag = coalition_social_liberal
	clr_country_flag = coalition_social_democrat
	clr_country_flag = coalition_progressive
	clr_country_flag = coalition_democratic_socialist
	clr_country_flag = coalition_communist
	clear_variable = ROOT.Coalition
}

update_coalition = {
	set_variable = {
		var = ROOT.Coalition
		value = 0
	}
	if = {
		limit = {
			has_country_flag = coalition_islamist
		}
		add_to_variable = { ROOT.Coalition = islamist_seats }
	}
	if = {
		limit = {
			has_country_flag = coalition_fascist
		}
		add_to_variable = { ROOT.Coalition = fascist_seats }
	}
	if = {
		limit = {
			has_country_flag = coalition_nationalist
		}
		add_to_variable = { ROOT.Coalition = nationalist_seats }
	}
	if = {
		limit = {
			has_country_flag = coalition_monarchist
		}
		add_to_variable = { ROOT.Coalition = monarchist_seats }
	}
	if = {
		limit = {
			has_country_flag = coalition_reactionary
		}
		add_to_variable = { ROOT.Coalition = reactionary_seats }
	}
	if = {
		limit = {
			has_country_flag = coalition_conservative
		}
		add_to_variable = { ROOT.Coalition = conservative_seats }
	}
	if = {
		limit = {
			has_country_flag = coalition_market_liberal
		}
		add_to_variable = { ROOT.Coalition = market_liberal_seats }
	}
	if = {
		limit = {
			has_country_flag = coalition_social_liberal
		}
		add_to_variable = { ROOT.Coalition = social_liberal_seats }
	}
	if = {
		limit = {
			has_country_flag = coalition_social_democrat
		}
		add_to_variable = { ROOT.Coalition = social_democrat_seats }
	}
	if = {
		limit = {
			has_country_flag = coalition_progressive
		}
		add_to_variable = { ROOT.Coalition = progressive_seats }
	}
	if = {
		limit = {
			has_country_flag = coalition_democratic_socialist
		}
		add_to_variable = { ROOT.Coalition = democratic_socialist_seats }
	}
	if = {
		limit = {
			has_country_flag = coalition_communist
		}
		add_to_variable = { ROOT.Coalition = communist_seats }
	}
	if = {
		limit = {
			NOT = { has_country_flag = has_coalition }
		}
		break_coalition = yes
	}
}

cleanup_coalition = {
	clr_country_flag = government_chosen
	clr_country_flag = coalition_chosen
	clear_variable = ROOT.NewCoalition
}

# Every nation has entries in its history file for popularities of a certain ideology. These Popularities change over time
# and are used to setup the seats inside the parliament

quickset_parliament = {

	# If no values have been predefined in the history files
	if = {
		limit = {
			NOT = {
				OR = {
					has_variable = communist_popularity
					has_variable = democratic_socialist_popularity
					has_variable = progressive_popularity
					has_variable = social_democrat_popularity
					has_variable = social_liberal_popularity
					has_variable = market_liberal_popularity
					has_variable = conservative_popularity
					has_variable = reactionary_popularity
					has_variable = monarchist_popularity
					has_variable = nationalist_popularity
					has_variable = fascist_popularity
					has_variable = islamist_popularity
				}
			}
		}
		# First Era (there is a difference between eras because there were no progressive people in 1900 for example)
		if = {
			limit = {
				date > 1899.12.1
				date < 1901.1.1
				OR = {
					has_government = democratic # Because who needs a parliament in a non-democratic country?
					has_country_flag = has_parliament # Because there are exceptions
				}
				democratic > 0
			}
			log = "Test"
			set_temp_variable = { democratic_support = party_popularity@democratic }
			multiply_temp_variable = { democratic_support = 100 }
			random_list = {
				1 = {
					divide_temp_variable = { democratic_support = 4 }
					set_variable = { democratic_socialist_popularity = democratic_support }
					set_variable = { social_democrat_popularity = democratic_support }
					set_variable = { market_liberal_popularity = democratic_support }
					set_variable = { conservative_popularity = democratic_support }
					random_list = {
						1 = {
							set_country_flag = government_democratic_socialist
						}
						1 = {
							set_country_flag = government_social_democrat
						}
						1 = {
							set_country_flag = government_market_liberal
						}
						1 = {
							set_country_flag = government_conservative
						}
					}
				}
				2 = {
					set_temp_variable = { democratic_support_1 = democratic_support }
					divide_temp_variable = { democratic_support_1 = 100 }
					multiply_temp_variable = { democratic_support_1 = 75 }
					set_variable = { democratic_socialist_popularity = democratic_support_1 }
					set_temp_variable = { democratic_support_2 = democratic_support }
					subtract_from_temp_variable = { democratic_support_2 = democratic_support_1 }
					divide_temp_variable = { democratic_support_2 = 3 }
					set_variable = { social_democrat_popularity = democratic_support_2 }
					set_variable = { market_liberal_popularity = democratic_support_2 }
					set_variable = { conservative_popularity = democratic_support_2 }
					set_country_flag = government_democratic_socialist
				}
				2 = {
					set_temp_variable = { democratic_support_1 = democratic_support }
					divide_temp_variable = { democratic_support_1 = 100 }
					multiply_temp_variable = { democratic_support_1 = 75 }
					set_variable = { social_democrat_popularity = democratic_support_1 }
					set_temp_variable = {democratic_support_2 = democratic_support }
					subtract_from_temp_variable = { democratic_support_2 = democratic_support_1 }
					divide_temp_variable = { democratic_support_2 = 3 }
					set_variable = { democratic_socialist_popularity = democratic_support_2 }
					set_variable = { market_liberal_popularity = democratic_support_2 }
					set_variable = { conservative_popularity = democratic_support_2 }
					set_country_flag = government_social_democrat
				}
				2 = {
					set_temp_variable = { democratic_support_1 = democratic_support }
					divide_temp_variable = { democratic_support_1 = 100 }
					multiply_temp_variable = { democratic_support_1 = 75 }
					set_variable = { market_liberal_popularity = democratic_support_1 }
					set_temp_variable = {democratic_support_2 = democratic_support }
					subtract_from_temp_variable = { democratic_support_2 = democratic_support_1 }
					divide_temp_variable = { democratic_support_2 = 3 }
					set_variable = { democratic_socialist_popularity = democratic_support_2 }
					set_variable = { social_democrat_popularity = democratic_support_2 }
					set_variable = { conservative_popularity = democratic_support_2 }
					set_country_flag = government_market_liberal
				}
				2 = {
					set_temp_variable = { democratic_support_1 = democratic_support }
					divide_temp_variable = { democratic_support_1 = 100 }
					multiply_temp_variable = { democratic_support_1 = 75 }
					set_variable = { conservative_popularity = democratic_support_1 }
					set_temp_variable = {democratic_support_2 = democratic_support }
					subtract_from_temp_variable = { democratic_support_2 = democratic_support_1 }
					divide_temp_variable = { democratic_support_2 = 3 }
					set_variable = { democratic_socialist_popularity = democratic_support_2 }
					set_variable = { social_democrat_popularity = democratic_support_2 }
					set_variable = { market_liberal_popularity = democratic_support_2 }
					set_country_flag = government_conservative
				}
			}
			# The residue is composed of the other ideologies and will be accordingly distributed
			# Communism
			set_temp_variable = { communist_support = party_popularity_100@communism }
			set_variable = { communist_popularity = communist_support }
			# Fascism
			set_temp_variable = { fascist_support = party_popularity_100@fascism }
			set_variable = { fascist_popularity = fascist_support }
			# Reactionary
			set_temp_variable = { reactionary_support = party_popularity_100@neutrality }
			set_variable = { reactionary_popularity = reactionary_support }
			# Islamism
			set_temp_variable = { islamist_support = party_popularity_100@islamism }
			set_variable = { islamist_popularity = islamist_support }

			# Problem: for countries like Germany, there is a parliament in 1900, composed of different parties. However,
			# the major ruling force in the country is the House of Hohenzollern, who isn't a party in the parliament, but has
			# all the power. This means we cannot use this random system up here and we HAVE to define historical values!!
		}
	}
	set_variable = { communist_seats = communist_popularity }
	set_variable = { democratic_socialist_seats = democratic_socialist_popularity }
	set_variable = { progressive_seats = progressive_popularity }
	set_variable = { social_democrat_seats = social_democrat_popularity }
	set_variable = { social_liberal_seats = social_liberal_popularity }
	set_variable = { market_liberal_seats = market_liberal_popularity }
	set_variable = { conservative_seats = conservative_popularity }
	set_variable = { reactionary_seats = reactionary_popularity }
	set_variable = { monarchist_seats = monarchist_popularity }
	set_variable = { nationalist_seats = nationalist_popularity }
	set_variable = { fascist_seats = fascist_popularity }
	set_variable = { islamist_seats = islamist_popularity }
	set_parliament_graphics = yes
}

quickset_coalition = {
    set_country_flag = has_coalition
	set_variable = { ROOT.Coalition = 0 }
	if = {
		limit = {
			has_country_flag = government_communist
		}
		set_country_flag = coalition_communist
        set_variable = { ROOT.Coalition = communist_seats }
	}
	if = {
		limit = {
			has_country_flag = government_democratic_socialist
		}
		set_country_flag = coalition_democratic_socialist
        set_variable = { ROOT.Coalition = democratic_socialist_seats }
	}
	if = {
		limit = {
			has_country_flag = government_progressive
		}
		set_country_flag = coalition_progressive
        set_variable = { ROOT.Coalition = progressive_seats }
	}
	if = {
		limit = {
			has_country_flag = government_social_democrat
		}
		set_country_flag = coalition_social_democrat
        set_variable = { ROOT.Coalition = social_democrat_seats }
	}
	if = {
		limit = {
			has_country_flag = government_social_liberal
		}
		set_country_flag = coalition_social_liberal
        set_variable = { ROOT.Coalition = social_liberal_seats }
	}
	if = {
		limit = {
			has_country_flag = government_market_liberal
		}
		set_country_flag = coalition_market_liberal
        set_variable = { ROOT.Coalition = market_liberal_seats }
	}
	if = {
		limit = {
			has_country_flag = government_conservative
		}
		set_country_flag = coalition_conservative
        set_variable = { ROOT.Coalition = conservative_seats }
	}
	if = {
		limit = {
			has_country_flag = government_reactionary
		}
		set_country_flag = coalition_reactionary
        set_variable = { ROOT.Coalition = reactionary_seats }
	}
	if = {
		limit = {
			has_country_flag = government_monarchist
		}
		set_country_flag = coalition_monarchist
        set_variable = { ROOT.Coalition = monarchist_seats }
	}
	if = {
		limit = {
			has_country_flag = government_nationalist
		}
		set_country_flag = coalition_nationalist
        set_variable = { ROOT.Coalition = nationalist_seats }
	}
	if = {
		limit = {
			has_country_flag = government_fascist
		}
		set_country_flag = coalition_fascist
        set_variable = { ROOT.Coalition = fascist_seats }
	}
	if = {
		limit = {
			has_country_flag = government_islamist
		}
		set_country_flag = coalition_islamist
        set_variable = { ROOT.Coalition = islamist_seats }
	}
	set_parliament_graphics_2 = yes
}

set_parliament_graphics = {

## CLARIFICATION
# Every ideology has a number from 1 to 12.
# There will be a parliament array with 50 entries of numbers reaching from 1 to 12, each defining a seat for a certain ideology.
#
## Step 1 : Create new variables to work with
	set_variable = { communist_seats_parliament = communist_seats }
	set_variable = { democratic_socialist_seats_parliament = democratic_socialist_seats }
	set_variable = { social_democrat_seats_parliament = social_democrat_seats }
	set_variable = { progressive_seats_parliament = progressive_seats }
	set_variable = { social_liberal_seats_parliament = social_liberal_seats }
	set_variable = { market_liberal_seats_parliament = market_liberal_seats }
	set_variable = { conservative_seats_parliament = conservative_seats }
	set_variable = { islamist_seats_parliament = islamist_seats }
	set_variable = { monarchist_seats_parliament = monarchist_seats }
	set_variable = { reactionary_seats_parliament = reactionary_seats }
	set_variable = { nationalist_seats_parliament = nationalist_seats }
	set_variable = { fascist_seats_parliament = fascist_seats }

## Step 2 : Round variables

	round_variable = communist_seats_parliament
	round_variable = democratic_socialist_seats_parliament
	round_variable = social_democrat_seats_parliament
	round_variable = progressive_seats_parliament
	round_variable = social_liberal_seats_parliament
	round_variable = market_liberal_seats_parliament
	round_variable = conservative_seats_parliament
	round_variable = islamist_seats_parliament
	round_variable = monarchist_seats_parliament
	round_variable = reactionary_seats_parliament
	round_variable = nationalist_seats_parliament
	round_variable = fascist_seats_parliament

## Step 3 : Divide by 2 (For a graphic of 50 seats)

	divide_variable = { communist_seats_parliament = 2 }
	divide_variable = { democratic_socialist_seats_parliament = 2 }
	divide_variable = { social_democrat_seats_parliament = 2 }
	divide_variable = { progressive_seats_parliament = 2 }
	divide_variable = { social_liberal_seats_parliament = 2 }
	divide_variable = { market_liberal_seats_parliament = 2 }
	divide_variable = { conservative_seats_parliament = 2 }
	divide_variable = { islamist_seats_parliament = 2 }
	divide_variable = { monarchist_seats_parliament = 2 }
	divide_variable = { reactionary_seats_parliament = 2 }
	divide_variable = { nationalist_seats_parliament = 2 }
	divide_variable = { fascist_seats_parliament = 2 }

## Step 4 : Round again

	round_variable = communist_seats_parliament
	round_variable = democratic_socialist_seats_parliament
	round_variable = social_democrat_seats_parliament
	round_variable = progressive_seats_parliament
	round_variable = social_liberal_seats_parliament
	round_variable = market_liberal_seats_parliament
	round_variable = conservative_seats_parliament
	round_variable = islamist_seats_parliament
	round_variable = monarchist_seats_parliament
	round_variable = reactionary_seats_parliament
	round_variable = nationalist_seats_parliament
	round_variable = fascist_seats_parliament

## Step 5: Assign seats


	add_to_array = { ideology_seats_array = 0 } # Placeholder, I need the frames to be 1-12 and not 0-11
	add_to_array = { ideology_seats_array = communist_seats_parliament }
	add_to_array = { ideology_seats_array = democratic_socialist_seats_parliament }
	add_to_array = { ideology_seats_array = social_democrat_seats_parliament }
	add_to_array = { ideology_seats_array = progressive_seats_parliament }
	add_to_array = { ideology_seats_array = social_liberal_seats_parliament }
	add_to_array = { ideology_seats_array = market_liberal_seats_parliament }
	add_to_array = { ideology_seats_array = conservative_seats_parliament }
	add_to_array = { ideology_seats_array = islamist_seats_parliament }
	add_to_array = { ideology_seats_array = monarchist_seats_parliament }
	add_to_array = { ideology_seats_array = reactionary_seats_parliament }
	add_to_array = { ideology_seats_array = nationalist_seats_parliament }
	add_to_array = { ideology_seats_array = fascist_seats_parliament }

	for_each_loop = {
		array = ideology_seats_array
		if = {
			limit = {
				check_variable = { v > 49 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 48 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 47 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 46 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 45 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 44 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 43 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 42 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 41 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 40 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 39 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 38 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 37 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 36 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 35 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 34 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 33 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 32 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 31 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 30 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 29 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 28 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 27 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 26 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 25 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 24 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 23 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 22 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 21 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 20 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 19 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 18 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 17 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 16 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 15 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 14 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 13 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 12 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 11 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 10 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 9 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 8 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 7 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 6 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 5 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 4 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 3 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 2 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 1 }
			}
			add_to_array = { parliament_array = i }
		}
		if = {
			limit = {
				check_variable = { v > 0 }
			}
			add_to_array = { parliament_array = i }
		}
	}
	if = {
		limit = {
			check_variable = { parliament_array^num > 51 }
		}
		resize_array = {
			parliament_array = 51
		}
	}
}

set_parliament_graphics_2 = {
	update_coalition = yes
	set_variable = {
		ROOT.GroupGFX = ROOT.Coalition
	}
	divide_variable = { ROOT.GroupGFX = 100 }
	multiply_variable = { ROOT.GroupGFX = 230 }

	set_variable = {
		ROOT.Opposition = 100
	}
	subtract_from_variable = {
		ROOT.Opposition = ROOT.Coalition
	}
}

set_coalition_to_array = {
	if = {
		limit = {
			has_country_flag = coalition_fascist
		}
		add_to_array = { member_parties_array = 12 }
	}
	if = {
		limit = {
			has_country_flag = coalition_nationalist
		}
		add_to_array = { member_parties_array = 11 }
	}
	if = {
		limit = {
			has_country_flag = coalition_reactionary
		}
		add_to_array = { member_parties_array = 10 }
	}
	if = {
		limit = {
			has_country_flag = coalition_monarchist
		}
		add_to_array = { member_parties_array = 9 }
	}
	if = {
		limit = {
			has_country_flag = coalition_islamist
		}
		add_to_array = { member_parties_array = 8 }
	}
	if = {
		limit = {
			has_country_flag = coalition_conservative
		}
		add_to_array = { member_parties_array = 7 }
	}
	if = {
		limit = {
			has_country_flag = coalition_market_liberal
		}
		add_to_array = { member_parties_array = 6 }
	}
	if = {
		limit = {
			has_country_flag = coalition_social_liberal
		}
		add_to_array = { member_parties_array = 5 }
	}
	if = {
		limit = {
			has_country_flag = coalition_progressive
		}
		add_to_array = { member_parties_array = 4 }
	}
	if = {
		limit = {
			has_country_flag = coalition_social_democrat
		}
		add_to_array = { member_parties_array = 3 }
	}
	if = {
		limit = {
			has_country_flag = coalition_democratic_socialist
		}
		add_to_array = { member_parties_array = 2 }
	}
	if = {
		limit = {
			has_country_flag = coalition_communist
		}
		add_to_array = { member_parties_array = 1 }
	}
}

setup_active_parties_list = {
	if = {
		limit = {
			check_variable = { communist_seats_parliament > 0 }
		}
		add_to_array = {
			active_parties_array = 1
		}
	}
	if = {
		limit = {
			check_variable = { democratic_socialist_seats_parliament > 0 }
		}
		add_to_array = {
			active_parties_array = 2
		}
	}
	if = {
		limit = {
			check_variable = { social_democrat_seats_parliament > 0 }
		}
		add_to_array = {
			active_parties_array = 3
		}
	}
	if = {
		limit = {
			check_variable = { progressive_seats_parliament > 0 }
		}
		add_to_array = {
			active_parties_array = 4
		}
	}
	if = {
		limit = {
			check_variable = { social_liberal_seats_parliament > 0 }
		}
		add_to_array = {
			active_parties_array = 5
		}
	}
	if = {
		limit = {
			check_variable = { market_liberal_seats_parliament > 0 }
		}
		add_to_array = {
			active_parties_array = 6
		}
	}
	if = {
		limit = {
			check_variable = { conservative_seats_parliament > 0 }
		}
		add_to_array = {
			active_parties_array = 7
		}
	}
	if = {
		limit = {
			check_variable = { islamist_seats_parliament > 0 }
		}
		add_to_array = {
			active_parties_array = 8
		}
	}
	if = {
		limit = {
			check_variable = { monarchist_seats_parliament > 0 }
		}
		add_to_array = {
			active_parties_array = 9
		}
	}
	if = {
		limit = {
			check_variable = { reactionary_seats_parliament > 0 }
		}
		add_to_array = {
			active_parties_array = 10
		}
	}
	if = {
		limit = {
			check_variable = { nationalist_seats_parliament > 0 }
		}
		add_to_array = {
			active_parties_array = 11
		}
	}
	if = {
		limit = {
			check_variable = { fascist_seats_parliament > 0 }
		}
		add_to_array = {
			active_parties_array = 12
		}
	}
	for_each_loop = {
		array = active_parties_array
		
		log = [?active_parties_array^v]
	}
}

add_ruling_party_popularity = {
	if = {
		limit = {
			has_country_flag = government_communist
		}
		add_to_variable = { ROOT.NewCoalition = communist_seats }
	}
	if = {
		limit = {
			has_country_flag = government_democratic_socialist
		}
		add_to_variable = { ROOT.NewCoalition = democratic_socialist_seats }
	}
	if = {
		limit = {
			has_country_flag = government_social_democrat
		}
		add_to_variable = { ROOT.NewCoalition = social_democrat_seats }
	}
	if = {
		limit = {
			has_country_flag = government_progressive
		}
		add_to_variable = { ROOT.NewCoalition = progressive_seats }
	}
	if = {
		limit = {
			has_country_flag = government_social_liberal
		}
		add_to_variable = { ROOT.NewCoalition = social_liberal_seats }
	}
	if = {
		limit = {
			has_country_flag = government_market_liberal
		}
		add_to_variable = { ROOT.NewCoalition = market_liberal_seats }
	}
	if = {
		limit = {
			has_country_flag = government_conservative
		}
		add_to_variable = { ROOT.NewCoalition = conservative_seats }
	}
	if = {
		limit = {
			has_country_flag = government_islamist
		}
		add_to_variable = { ROOT.NewCoalition = islamist_seats }
	}
	if = {
		limit = {
			has_country_flag = government_monarchist
		}
		add_to_variable = { ROOT.NewCoalition = monarchist_seats }
	}
	if = {
		limit = {
			has_country_flag = government_reactionary
		}
		add_to_variable = { ROOT.NewCoalition = reactionary_seats }
	}
	if = {
		limit = {
			has_country_flag = government_nationalist
		}
		add_to_variable = { ROOT.NewCoalition = nationalist_seats }
	}
	if = {
		limit = {
			has_country_flag = government_fascist
		}
		add_to_variable = { ROOT.NewCoalition = fascist_seats }
	}
}