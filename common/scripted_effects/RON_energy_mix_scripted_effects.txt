# Scripted GUI Pie Chart example by Yard1
# Feel free to use in your mods, but give credits to Yard1 (both in code, with comments; and on your download page)

# this creates a pie chart of popularities - can be easily adapted to show anything that adds up to 100%



#CONVERSION TABLES
# 1 coal = 0.6 gas
# 1 oil = 2 coal

energy_initial = {
	every_country = [
		energy_mix_initial = yes
	]
}
calculate_shortages = {
	
		set_variable = { total_energy_consumption = 0 }
		add_to_variable = {total_energy_consumption = num_arms}
		add_to_variable = {total_energy_consumption = num_civs}
		#add_to_variable = { total_energy_consumption = num_ref }

		set_variable = { num_coal_needed = energy_percentage_array^0}
		divide_variable = { num_coal_needed = 100 }
		multiply_variable = { num_coal_needed = total_energy_consumption }
		round_variable = num_coal_needed

		set_variable = { num_gas_needed = energy_percentage_array^1}
		divide_variable = { num_gas_needed = 100 }
		multiply_variable = { num_gas_needed = total_energy_consumption }
		multiply_variable = { num_gas_needed = 1.6 }
		round_variable = num_gas_needed

		set_variable = { num_oil_needed = energy_percentage_array^2}
		divide_variable = { num_oil_needed = 100 }
		multiply_variable = { num_oil_needed = total_energy_consumption }
		divide_variable = { num_oil_needed = 2 }
		round_variable = num_oil_needed



		set_variable = {
			coal_fulfillment = resource@coal
		}
		divide_variable = {
			coal_fulfillment = num_coal_needed
		}
		multiply_variable = {
			coal_fulfillment = 100
		}
		round_temp_variable = coal_fulfillment
		clamp_variable = {
			var = coal_fulfillment
			min = 0
			max = 100
		}

		set_variable = {
			oil_fulfillment = resource@oil  
		}
		divide_variable = {
			oil_fulfillment = num_oil_needed
		}
		multiply_variable = {
			oil_fulfillment = 100
		}
		round_variable = oil_fulfillment
		clamp_variable = {
			var = oil_fulfillment
			min = 0
			max = 100
		}
		set_variable = {
			gas_fulfillment = resource@gas
		}
		divide_variable = {
			gas_fulfillment = num_gas_needed
		}
		multiply_variable = {
			gas_fulfillment = 100
		}
		round_variable = gas_fulfillment
		clamp_variable = {
			var = gas_fulfillment
			min = 0
			max = 100
		}
	print_variables = {
	file = test
	text = header_text
	append = yes
	print_global = yes
	var_list = { num_coal_needed num_gas_needed num_oil_needed num_civs num_arms num_ref} #optional
	} 
}
create_pie_chart = {
	clear_array = pie_chart
	resize_array = {
		array = pie_chart
		value = 1 # 1 is value for neutrality frame, so we don't have to make a loop for it
		size = 100 # 100 pieces, each percent is one piece
	}
	set_temp_variable = { neutrality_pop = energy_percentage_array^0 }
	
	round_temp_variable = neutrality_pop

	set_temp_variable = { communism_pop = energy_percentage_array^1 }
	
	round_temp_variable = communism_pop 
	set_variable = { ROOT.last_idx = neutrality_pop }
	add_to_temp_variable = { communism_pop = ROOT.last_idx }
	for_loop_effect = {
		start = ROOT.last_idx
		end = communism_pop
		set_variable = { pie_chart^v = 2 }
		add_to_variable = { ROOT.last_idx = 1 }
	}

	set_temp_variable = { democratic_pop = energy_percentage_array^2 }
	
	round_temp_variable = democratic_pop
	add_to_temp_variable = { democratic_pop = ROOT.last_idx }
	for_loop_effect = {
		start = ROOT.last_idx
		end = democratic_pop
		set_variable = { pie_chart^v = 3 }
		add_to_variable = { ROOT.last_idx = 1 }
	}

	clear_variable = ROOT.last_idx
	add_to_variable = { pie_chart_dirty = 1 }
}
clamp_energy_variables = {
	
}
energy_mix_initial = {
	# Put simply an array stores a list of things, used here to store the list of parties and list of seats.

	# energy_percentage_array stores the list of seat numbers for each party
	add_to_array = { energy_percentage_array = 100 } # Coal
	add_to_array = { energy_percentage_array = 0 } # Petrol
	add_to_array = { energy_percentage_array = 0 } # Gas
	add_to_array = { energy_percentage_array = 0 } # Nuclear
	

	# energy_mean_array stores the list of parties
	# This basically assigns an id for each party, so Party A = 1, Party B = 2, etc. (must start from 1 and is in order)
	add_to_array = { energy_mean_array = 1 } # Coal
	add_to_array = { energy_mean_array = 2 } # Petrol
	add_to_array = { energy_mean_array = 3 } # Gas
	add_to_array = { energy_mean_array = 4 } # Nuclear
	create_pie_chart = yes

}


modify_energy_mix = {
	set_temp_variable = {v = temp_mean}
	custom_effect_tooltip = get_parliament_modification_tt
	subtract_from_temp_variable = { temp_mean = 1 }
	
	# check to see if result overflows
	set_temp_variable = { temp = energy_percentage_array^temp_mean }
	add_to_temp_variable = { temp = temp_percentage }
	if = {
		limit = {
			OR = {
				NOT = {
					AND = {
						check_variable = {
							energy_percentage_array^temp_mean > 100
						}
						check_variable = {
							temp_percentage > 0
						}
					}
				}
				NOT = {
					AND = { 
						check_variable = {
							energy_percentage_array^temp_mean < 1
						}
						check_variable = {
							temp_percentage < 0
						}
					}
				}
			}
		}
	
	if = {
		limit = {
			check_variable = { temp > 100 }
		}
		subtract_from_temp_variable = { temp = energy_main_array^num }
		subtract_from_temp_variable = { temp_percentage = temp }
	}
	else_if = {
		limit = {
			check_variable = { temp < 0 }
		}
		multiply_temp_variable = { temp = -1 }
		subtract_from_temp_variable = { temp_percentage = temp }
	}

	# adds all parties to temp_array
	for_loop_effect = {
		start = 0
		end = energy_percentage_array^num

		add_to_temp_array = { temp_array = v }
	}

	# remove from list of parties the party to be added/subtracted
	remove_from_temp_array = { array = temp_array value = temp_mean }

	# give party new seat value
	add_to_variable = { energy_percentage_array^temp_mean = temp_percentage }

	# if its add
	if = {
		limit = {
			check_variable = { temp_percentage > 0 }
		}
		# loop until seats to be added is 0
		while_loop_effect = {
			limit = {
				check_variable = { temp_percentage > 0 }
			}

			# loops through remaining parties, subtracting 1 seat each time
			for_loop_effect = {
				start = 0
				end = temp_array^num

				if = {
					limit = {
						check_variable = { energy_percentage_array^temp_array^v > 0 } # party must have more than 0 seats to be subtracted
						check_variable = { temp_percentage > 0 } # seats to be added is bigger than 0 currently
					}
					subtract_from_variable = { energy_percentage_array^temp_array^v = 1 } # subtract from party 1 seat
					subtract_from_temp_variable = { temp_percentage = 1 } # subtract from seats to be added
				}
			}
		}
	}
	# if its subtract
	else_if = {
		limit = {
			check_variable = { temp_percentage < 0 }
		}
		add_political_power = 100
		# loop until seats to be subtracted is 0
		while_loop_effect = {
			limit = {
				check_variable = { temp_percentage < 0 }
			}

			# loops through remaining parties, adding 1 seat each time
			for_loop_effect = {
				start = 0
				end = temp_array^num

				if = {
					limit = {
						check_variable = { energy_percentage_array^temp_array^v < 100 } # party must have less than max seats to be added
						check_variable = { temp_percentage < 0 } # seats to be subtracted is less than 0 currently
					}
					add_to_variable = { energy_percentage_array^temp_array^v = 1 } # add to party 1 seat
					add_to_temp_variable = { temp_percentage = 1 } # add to seats to be subtracted
				}
			}
		}
	}
	# do nothing if 0

	# Modify what shows up in the gui
	
	create_pie_chart = yes
		
	}
}

# Clear all arrays (for debugging)
clear_energy_gui_arrays = {
	
	clear_array = energy_mean_array
	clear_array = energy_percentage_array
}

